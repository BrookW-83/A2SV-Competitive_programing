class Solution:
    def removeStones(self, stones: List[List[int]]) -> int:
        n = len(stones)
        parent = {}
        rank = {}
        for i in range(n):
            parent[i] = i
            rank[i] = 1

        def find (x):
            if not parent.get(x):
                parent[x] = x
                rank[x] = 1
                return x
            if parent[x] != x:
                parent[x] = find(parent[x])
            return parent[x]

        def union(x, y):
            p1 = find(x)
            p2 = find(y)

            if p1 == p2:
                return 0
            if rank[p1] > rank[p2]:
                parent[p2] = p2
        
            elif rank[p2] > rank[p1]:
                parent[p1] = p2
            elif rank[p1] == rank[p2]:
                parent[p2] = p1
                rank[p1]
            return 1
 
        rows, cols = {}, {}
        removed = 0
        for i, (row, col) in enumerate(stones):
            if row in rows:
                removed += union(i, rows[row])
            else:
                rows[row] = i
            if col in cols:
                removed += union(i, cols[col])
            else:
                cols[col] = i

        return removed
