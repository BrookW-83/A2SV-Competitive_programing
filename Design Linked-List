class listNode:
    def __init__(self, x):
        self.val = x
        self.head = None

class MyLinkedList:

    def __init__(self):
        self.size = 0
        self.head = listNode(0)

    def get(self, index: int) -> int:
        if index < 0 or index >= self.size:
            return -1

        curr = self.head

        for _ in range(index + 1 ):
            curr = curr.next

        return curr.val
        

    def addAtHead(self, val: int) -> None:
        self.addAtIndex( 0, val)
        

    def addAtTail(self, val: int) -> None:
        self.addAtIndex(self.size, val)
        

    def addAtIndex(self, index: int, val: int) -> None:
        if self.size < index:
            return

        self.size += 1
        prev = self.head

        for _ in range(index):
            prev = prev.next

        new_val = listNode(val)

        prev.next = new_val
        new_val.next = prev.next


    def deleteAtIndex(self, index: int) -> None:
        if index < 0 or index >= self.size:
            return

        self.size -= 1
        prev = self.head

        for _ in range(index):
            prev = prev.next

        prev.next = prev.next.next
