class Solution:
    def networkDelayTime(self, times: List[List[int]], n: int, k: int) -> int:
        graph = defaultdict(list)
        for e1, e2, t in times:
            graph[e1].append((e2, t)) 

        minHeap = [(0, k)]
        heapify(minHeap)
        seen = set()
        res = [float("inf")]*n

        while minHeap:
            t1, node = heappop(minHeap)
            
            if node in seen:
                continue
            seen.add(node)
            res[node -1] = t1
            
            for child, t2 in graph[node]:
                if child not in seen:
                    heappush(minHeap, (t1+t2, child))

        ans = max(res)
        return ans if ans != float("inf") else -1
                



        
