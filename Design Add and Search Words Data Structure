
class Dictionary:
    def __init__(self):
        self.is_end = False
        self.children = {}

class WordDictionary:
    def __init__(self):
        self.root = Dictionary()
        
    def addWord(self, word: str) -> None:
        trie = self.root

        for i in range(len(word)):
            char = word[i]

            if char not in trie.children:
                trie.children[char] = Dictionary()

            trie = trie.children[char]

            if i == len(word)-1:
                trie.is_end = True
        
    def search(self, word: str) -> bool:
        def dfs(node, index):
            if index == len(word):
                return node.is_end

            if word[index] == '.':
                for child in node.children.values():
                    if dfs(child, index + 1):
                        return True
                
            if word[index] in node.children:
                return dfs(node.children[word[index]], index + 1)

            return False

        return dfs(self.root, 0)        
        


# Your WordDictionary object will be instantiated and called as such:
# obj = WordDictionary()
# obj.addWord(word)
# param_2 = obj.search(word)
