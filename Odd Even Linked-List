# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def oddEvenList(self, head: Optional[ListNode]) -> Optional[ListNode]:
        if not head:
            return 

        dummy = ListNode(0, head.next)
        prev = head
        curr = dummy.next

        while (prev and prev.next) and (curr and curr.next):
            prev.next = prev.next.next
            prev = prev.next
            curr.next = curr.next.next
            curr = curr.next
            
        prev.next = dummy.next
        if curr:
            curr.next = None


        return head
