class Solution:
    def restoreArray(self, adjacentPairs: List[List[int]]) -> List[int]:
        graph = defaultdict(set)
        for p1, p2 in adjacentPairs:
            graph[p1].add(p2)
            graph[p2].add(p1)

        q = deque()
        nums = [0] * (len(adjacentPairs) + 1)
        for node in graph:
            if len(graph[node]) <= 1:
                q.append(node)
        

        start = False
        i, j = 0, len(nums)-1
        while q:
            n = q.popleft()
            for child in graph[n]:
                graph[child].remove(n)
                if len(graph[child]) == 1:
                    q.append(child)
                    print(q)
            graph[n] = set()
            if start:
                nums[i] = n
                i += 1
                start = False

            else:
                nums[j] = n
                j -= 1
                start = True

        return nums
