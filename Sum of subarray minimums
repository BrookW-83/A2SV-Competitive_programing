class Solution:
    def sumSubarrayMins(self, arr: List[int]) -> int:
        n = len(arr)
        left = [1] * n
        stack1 = [(arr[0], 1)]

        for i in range(1, n):
            while stack1 and arr[i] <= stack1[-1][0]:
                left[i] += stack1.pop()[1]

            stack1.append((arr[i], left[i]))

        right = [1] * n
        stack2 = [(arr[-1], 1)]

        for i in range(n - 2, -1, -1):
            while stack2 and arr[i] < stack2[-1][0]:
                right[i] += stack2.pop()[1]

            stack2.append((arr[i], right[i]))

        output = 0
        for i in range(n):
            output += arr[i] * left[i] * right[i]

        mod = (10**9 + 7)

        return output % mod
