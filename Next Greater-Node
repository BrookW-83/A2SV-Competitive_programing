# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def nextLargerNodes(self, head: Optional[ListNode]) -> List[int]:
        counter = 0
        curr = head

        while curr:
            counter += 1
            curr = curr.next

        arr = [0] * counter
        stack = []
        curr = head
        index = 0

        while curr:
            if not stack  or curr.val <= stack[-1][0]:
                stack.append((curr.val, index))
                curr = curr.next
                index += 1

            else:
                while stack and curr.val > stack[-1][0]:
                    val, idx = stack.pop()
                    arr[idx] = curr.val
                stack.append((curr.val, index))
                curr = curr.next
                index += 1

        return arr
