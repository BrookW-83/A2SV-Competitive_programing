class Solution:
    def minTime(self, n: int, edges: List[List[int]], hasApple: List[bool]) -> int:
        graph = defaultdict(list)

        for e1, e2 in edges:
            graph[e1].append(e2)
            graph[e2].append(e1)

        def dfs(node, root):
            count = 0

            for child in graph[node]:
                if child != root:
                    count += dfs(child, node)
                
            if hasApple[node] and node != 0:
                hasApple[root] = True
                return count + 2
            return count

        return dfs(0, 0)
